#На вход подается переменная строки.

#Написать однострочную инструкцию, которая поменяет порядок букв на противоположный и понизит все буквы в регистре кроме первой.

#Вернуть значение результата. Оригинальный объект, на который ссылается переменная, должен быть изменен.


def test(value)
value.reverse!.capitalize!
end

#Вернуть массив чисел от 10 до 3 не влючая 5, причём числа, кратные 3м, вывести в квадрате.


def (test)
a = (3..10).to_a.reverse
a.delete(5)
a = a.map{|e|e % 3 == 0 ? e**2 : e}
end

#Дано число. Вернуть число, где первая цифра стала последней, вторая - предпоследней и тд.

#Ноль остается нулем.

#Знак минуса также сохраняется.

def test(value)
  if value < 0 
    value=value.to_s.reverse!.to_i*(-1)
  else
    y = 0
    while value > 0 do
      y = y*10
      y = y + value%10
      value = value/10 
    end
    value = y
  end
end

# Дано целое число. Найти и вернуть сумму его цифр.


def test(value)
value.to_s.split('').map { |i| i.to_i}.reduce(0, :+)
end

#Дана строка. Необходимо подсчитать количество букв "а" в этой строке (независимо от регистра).


def test(string)
string.downcase.count('a')
end

#Проверить, является ли она палиндромом


def palindrome(value)
  value.downcase == value.downcase.reverse
end

#Дан хэш:
#Ответить на вопрос: если ли в магазине какой-либо продукт с заданой ценой?

def test(value)
  shop = {
    milk: 10,
    bread: 8,
    cornflakes: 12,
    ice_cream: 15,
    pie: 20
 }

shop.values.include? (value)
end

#Прибавить 100 к максимальному элементу заданого массива и вернуть его.


def test(array)
max = array.max
while array.index(max) do
array[array.index(max)] = max+100
end
array
end

#Вывести отсортированный по убыванию массив из уникальных элементов многомерного массива.


def test(array)
array.flatten.uniq.sort.reverse
end

#Написать код, который выводит массив из n-первых элементов последовательности чисел Фибонначи
#
#Решение должно работать для любого n.


def fib(n)
  arr = []
  if n == 0 
    return arr
  elsif n == 1 
    arr << 0
    return arr
  end
  a=0; b=1
  arr << a
  arr << b
  result=0
  while result < n-2
   arr << a+b
   a=b; b= arr[-1]
   result+=1
  end
  arr
end
